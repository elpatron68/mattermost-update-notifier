name: Build and Push Docker Image

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKER_TOKEN }}
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Extract metadata for GitHub Container Registry
      id: meta-ghcr
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/elpatron68/mattermost-update-notifier
        tags: |
          type=ref,event=tag
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Extract metadata for Docker Hub
      id: meta-dockerhub
      uses: docker/metadata-action@v5
      with:
        images: elpatronki/mattermost-update-notifier
        tags: |
          type=ref,event=tag
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push to GitHub Container Registry
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta-ghcr.outputs.tags }}
        labels: ${{ steps.meta-ghcr.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build and push to Docker Hub
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta-dockerhub.outputs.tags }}
        labels: ${{ steps.meta-dockerhub.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Update Release with Docker info
      if: github.event_name == 'release'
      run: |
        echo "## 🐳 Docker Images Published" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### GitHub Container Registry:" >> $GITHUB_STEP_SUMMARY
        echo "- Image: \`ghcr.io/elpatron68/mattermost-update-notifier:${{ github.event.release.tag_name }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- Pull: \`docker pull ghcr.io/elpatron68/mattermost-update-notifier:${{ github.event.release.tag_name }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Docker Hub (Recommended):" >> $GITHUB_STEP_SUMMARY
        echo "- Image: \`elpatronki/mattermost-update-notifier:${{ github.event.release.tag_name }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- Pull: \`docker pull elpatronki/mattermost-update-notifier:${{ github.event.release.tag_name }}\`" >> $GITHUB_STEP_SUMMARY
